# -- Overrides the chart's name
nameOverride: ""

# -- Overrides the chart's computed fullname
fullnameOverride: ""

# -- Number of replicas
replicas: 1

image:
  # -- blobscan container image repository
  repository: blossomlabs/blobscan
  # -- blobscan container image tag
  tag: next
  # -- blobscan container pull policy
  pullPolicy: IfNotPresent

# -- Secret env variables injected via a created secret
secretEnv: {}

# -- Ports
httpPort: 3001

# -- Command arguments
args: []

# -- Config file
# @default -- See `values.yaml`
# https://github.com/Blobscan/blobscan/blob/next/.env.example
config:
  DATABASE_URL: "postgresql://postgres:postgres@blobscan-blobscandb:5432/blobscan?ssl=false"
  SECRET_KEY: "supersecret"
  BEACON_NODE_ENDPOINT: "http://beacon-node:5052"
  CHAIN_ID: "1"
  BLOBSCAN_API_PORT: "3001"
  # Storages
  POSTGRES_STORAGE_ENABLED: "true"
  SWARM_STORAGE_ENABLED: "false"
  GOOGLE_STORAGE_ENABLED: "false"
  # Google cloud storage specific
  GOOGLE_STORAGE_BUCKET_NAME: ""
  GOOGLE_STORAGE_PROJECT_ID: ""
  GOOGLE_SERVICE_KEY: ""
  # Opentelemetry
  OTLP_AUTH_USERNAME: ""
  OTLP_AUTH_PASSWORD: ""
  OTEL_EXPORTER_OTLP_PROTOCOL: "http/protobuf"
  OTEL_EXPORTER_OTLP_ENDPOINT: "http://localhost:4318"
  METRICS_ENABLED: "true"
  TRACES_ENABLED: "false"
  # Swarm storage specific
  BEE_DEBUG_ENDPOINT: "http://localhost:1635"
  BEE_ENDPOINT: "http://localhost:1633"

# -- Additional env variables
extraEnv: []

ingress:
  # -- Ingress resource for the HTTP API
  enabled: false
  # -- Annotations for Ingress
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # -- Ingress host
  hosts:
    - host: chart-example.local
      paths: []
  # -- Ingress TLS
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Custom args for the blobscan container
customArgs: ["api"]

# -- Command replacement for the blobscan container
customCommand: [] # Only change this if you need to change the default command

service:
  # -- Service type
  type: ClusterIP

# -- Affinity configuration for pods
affinity: {}

# -- Image pull secrets for Docker images
imagePullSecrets: []

# -- Annotations for the Deployment
annotations: {}

# -- Liveness probe
# @default -- See `values.yaml`
livenessProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 60
  periodSeconds: 120

# -- Readiness probe
# @default -- See `values.yaml`
readinessProbe:
  tcpSocket:
    port: http
  initialDelaySeconds: 10
  periodSeconds: 10

# -- Node selector for pods
nodeSelector: {}

# -- Pod labels
podLabels: {}

# -- Pod annotations
podAnnotations: {}

# -- Extra Pod ports
extraPodPorts: []

# -- Pod priority class
priorityClassName: null

# -- Resource requests and limits
resources: {}
# limits:
#   cpu: 500m
#   memory: 2Gi
# requests:
#   cpu: 300m
#   memory: 1Gi

# -- The security context for pods
# @default -- See `values.yaml`
securityContext:
  fsGroup: 1000
  runAsGroup: 1000
  runAsNonRoot: true
  runAsUser: 1000

# -- The security context for containers
# @default -- See `values.yaml`
containerSecurityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

serviceAccount:
  # -- Specifies whether a service account should be created
  create: false
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- How long to wait until the pod is forcefully terminated
terminationGracePeriodSeconds: 30

# -- Tolerations for pods
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# -- Define the PodDisruptionBudget spec
# If not set then a PodDisruptionBudget will not be created
podDisruptionBudget: {}
# minAvailable: 1
# maxUnavailable: 1

# -- Additional init containers
initContainers: []
# - name: my-init-container
#   image: busybox:latest
#   command: ['sh', '-c', 'echo hello']

# -- Additional containers
extraContainers: []

# -- Additional volumes
extraVolumes: []

# -- Additional volume mounts
extraVolumeMounts: []

# -- Additional ports. Useful when using extraContainers
extraPorts: []

serviceMonitor:
  # -- If true, a ServiceMonitor CRD is created for a prometheus operator
  # https://github.com/coreos/prometheus-operator
  enabled: false
  # -- Path to scrape
  path: /metrics
  # -- Alternative namespace for ServiceMonitor
  namespace: null
  # -- Additional ServiceMonitor labels
  labels: {}
  # -- Additional ServiceMonitor annotations
  annotations: {}
  # -- ServiceMonitor scrape interval
  interval: 15s
  # -- ServiceMonitor scheme
  scheme: http
  # -- ServiceMonitor TLS configuration
  tlsConfig: {}
  # -- ServiceMonitor scrape timeout
  scrapeTimeout: 30s
  # -- ServiceMonitor relabelings
  relabelings: []
